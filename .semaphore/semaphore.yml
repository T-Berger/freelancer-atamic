# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0

# Name your pipeline. In case you connect multiple pipelines with promotions,
# the name will help you differentiate between, for example, a CI build phase
# and delivery phases.
name: Semaphore Atamic Pipeline

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images.
# See https://docs.semaphoreci.com/article/20-machine-types
# and https://docs.semaphoreci.com/article/32-ubuntu-1804-image
agent:
  machine:
    type: e1-standard-2

  containers:
    - name: main
      image: masalinasgancedo/atamic-python:latest

# Blocks are the heart of a pipeline and are executed sequentially.
# Each block has a task that defines one or more jobs. Jobs define the
# commands to execute.
# See https://docs.semaphoreci.com/article/62-concepts
blocks:
  - name: "Create Block"
    task:
      secrets:
        - name: slack-secrets
      jobs:
        - name: "Jupyter Notebooks Tester Job"
          commands:
            # Get the latest version of our source code from GitHub:
            # See https://docs.semaphoreci.com/article/54-toolbox-reference#checkout
            - checkout
            # Debug: checkout the conda version installed
            #- conda list
            # Debug: Where am i?
            #- pwd
            # Create the conda environment from the environment.yml file: conda and pip python dependencies
            - conda env create -f environment.yml
            # Activate the new conda environment
            - conda activate atamic
            # Debug: checkout the nbformat version installed in the conda environment
            #- conda list nbformat
            # Debug: slackclient the nbformat version installed in the conda environment
            #- conda list slackclient
            # Start the Python Jupyter Notebooks service using the configuration.yml. Generate
            # notifications where finished. Recover the Slack API Token from secrets
            - python notebook_tester.py -t $SLACK_API_TOKEN
